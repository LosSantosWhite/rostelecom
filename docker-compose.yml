version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:3-management
    hostname: my-rabbit
    volumes:
      - ./rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - backend

  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "postgres",
          "-U",
          "postgres"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy

  tornado:
    build:
      dockerfile: ./docker/tornado.dockerfile
    ports:
      - 8000:8000
    networks:
      - frontend
      - backend

  frontend:
    image: nginx
    volumes:
      - ./frontend:/usr/share/nginx/html
    ports:
      - 80:80
    networks:
      - frontend

  fastapi:
    build:
      dockerfile: ./docker/fastapi.dockerfile
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
      tornado:
        condition: service_started
      frontend:
        condition: service_started
      rabbitmq:
        condition: service_started
      adminer:
        condition: service_started

networks:
  frontend:
  backend:
